{"ast":null,"code":"var _jsxFileName = \"/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Loader from 'react-loaders';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useRef } from 'react';\nimport emailjs from '@emailjs/browser';\nimport AnimatedLetters from '../AnimatedLetters';\nimport './index.scss';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [letterClass, setLetterClass] = useState('text-animate');\n  const form = useRef();\n  const contactArray = ''.split('');\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover');\n    }, 3000);\n  }, []);\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm(process.env.REACT_APP_EMIAL_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, form.current, process.env.REACT_APP_PUBLIC_KEY).then(() => {\n      // alert('성공적으로 메세지를 보냈습니다.')\n      toast.success('Message successfully sent!', {\n        position: 'bottom-center',\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n      const timeout = setTimeout(() => {\n        window.location.reload(false);\n      }, 3900);\n      return () => clearTimeout(timeout);\n    }, () => {\n      // alert('다시 시도해주세요')\n      toast.error('Failed to send the message, please try again', {\n        position: 'bottom-center',\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container contact-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-zone\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n            letterClass: letterClass,\n            strArray: contactArray,\n            idx: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"objectSelect\",\n            children: \"\\uCD2C\\uC601\\uD560 \\uAC1D\\uCCB4\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"objectSelect\",\n            name: \"objectSelect\",\n            value: selectedObject,\n            onChange: e => setSelectedObject(e.target.value),\n            children: cocoObjects.map(obj => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: obj,\n              children: obj.charAt(0).toUpperCase() + obj.slice(1)\n            }, obj, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"shootingInterval\",\n            children: \"\\uCD2C\\uC601\\uAC04\\uACA9(\\uCD08)\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"shootingInterval\",\n            name: \"shootingInterval\",\n            min: \"0.1\",\n            max: \"60\",\n            value: shootingInterval,\n            onChange: e => setShootingInterval(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"objectCount\",\n            children: \"\\uAC1D\\uCCB4 \\uC218\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"objectCount\",\n            name: \"objectCount\",\n            min: \"1\",\n            max: \"10\",\n            value: objectCount,\n            onChange: e => setObjectCount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"above\",\n                checked: detectionMode === \"above\",\n                onChange: e => setDetectionMode(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), \"\\uC774\\uC0C1\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"below\",\n                checked: detectionMode === \"below\",\n                onChange: e => setDetectionMode(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), \"\\uC774\\uD558\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"fix\",\n                checked: detectionMode === \"fix\",\n                onChange: e => setDetectionMode(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), \"\\uACE0\\uC815\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '80%',\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"LinkButton\",\n              to: \"/webcam\",\n              children: \"\\uC138\\uD305 \\uC644\\uB8CC!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/webcam\",\n      element: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(WebcamApp, {\n          selectedObject: selectedObject,\n          objectCount: parseInt(objectCount, 10),\n          shootingInterval: parseInt(shootingInterval, 10),\n          detectionMode: detectionMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"LinkButton\",\n            to: \"/\",\n            children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Contact, \"Nh7PmDT9XxshDzJA92J6n98eyT0=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Contact/index.js"],"names":["useEffect","useState","Loader","MapContainer","TileLayer","Marker","Popup","useRef","emailjs","AnimatedLetters","ToastContainer","toast","Contact","letterClass","setLetterClass","form","contactArray","split","setTimeout","sendEmail","e","preventDefault","sendForm","process","env","REACT_APP_EMIAL_SERVICE_ID","REACT_APP_TEMPLATE_ID","current","REACT_APP_PUBLIC_KEY","then","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","timeout","window","location","reload","clearTimeout","error","selectedObject","setSelectedObject","target","value","cocoObjects","map","obj","charAt","toUpperCase","slice","shootingInterval","setShootingInterval","objectCount","setObjectCount","detectionMode","setDetectionMode","width","textAlign","parseInt","marginTop"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Loader from 'react-loaders'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { useRef } from 'react'\nimport emailjs from '@emailjs/browser'\nimport AnimatedLetters from '../AnimatedLetters'\nimport './index.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\n\n\n\nconst Contact = () => {\n  const [letterClass, setLetterClass] = useState('text-animate')\n  const form = useRef()\n  const contactArray = ''.split('')\n\n\n\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover')\n    }, 3000)\n  }, [])\n\n  const sendEmail = (e) => {\n    e.preventDefault()\n\n    emailjs\n      .sendForm(\n        process.env.REACT_APP_EMIAL_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        form.current,\n        process.env.REACT_APP_PUBLIC_KEY\n      )\n      .then(\n        () => {\n          // alert('성공적으로 메세지를 보냈습니다.')\n          toast.success('Message successfully sent!', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n          const timeout = setTimeout(() => {\n            window.location.reload(false)\n          }, 3900)\n\n          return () => clearTimeout(timeout)\n        },\n        () => {\n          // alert('다시 시도해주세요')\n          toast.error('Failed to send the message, please try again', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n        }\n      )\n  }\n\n  return (\n    <>\n      <div className=\"container contact-page\">\n        <div className=\"text-zone\">\n          <h1>\n            <AnimatedLetters\n              letterClass={letterClass}\n              strArray={contactArray}\n              idx={15}\n            />\n          </h1>\n          <div>\n              {/* 객체 선택 드롭다운 */}\n              <label htmlFor=\"objectSelect\">촬영할 객체를 선택하세요!</label>\n              <select \n                id=\"objectSelect\" \n                name=\"objectSelect\" \n                value={selectedObject} \n                onChange={(e) => setSelectedObject(e.target.value)}\n              >\n                {cocoObjects.map(obj => <option key={obj} value={obj}>{obj.charAt(0).toUpperCase() + obj.slice(1)}</option>)}\n              </select>\n              \n              {/* 촬영 간격 선택 입력 */}\n              <label htmlFor=\"shootingInterval\">촬영간격(초)을 선택하세요!</label>\n              <input \n                type=\"number\" \n                id=\"shootingInterval\" \n                name=\"shootingInterval\" \n                min=\"0.1\" \n                max=\"60\" \n                value={shootingInterval} \n                onChange={(e) => setShootingInterval(e.target.value)}\n              />\n              \n              {/* 객체 수 선택 입력 */}\n              <label htmlFor=\"objectCount\">객체 수를 선택하세요!</label>\n              <input \n                type=\"number\" \n                id=\"objectCount\" \n                name=\"objectCount\" \n                min=\"1\" \n                max=\"10\" \n                value={objectCount} \n                onChange={(e) => setObjectCount(e.target.value)}\n              />\n              \n              {/* 감지 모드 선택 라디오 버튼 */}\n              <div>\n                <label>\n                  <input \n                    type=\"radio\" \n                    value=\"above\" \n                    checked={detectionMode === \"above\"} \n                    onChange={(e) => setDetectionMode(e.target.value)} \n                  />\n                  이상\n                </label>\n                <label>\n                  <input \n                    type=\"radio\" \n                    value=\"below\" \n                    checked={detectionMode === \"below\"} \n                    onChange={(e) => setDetectionMode(e.target.value)} \n                  />\n                  이하\n                </label>\n                <label>\n                  <input \n                    type=\"radio\" \n                    value=\"fix\" \n                    checked={detectionMode === \"fix\"} \n                    onChange={(e) => setDetectionMode(e.target.value)} \n                  />\n                  고정\n                </label>\n              </div>\n              \n              {/* 세팅 완료 버튼 */}\n              <div style={{ width: '80%', textAlign: 'center' }}>\n                <Link className=\"LinkButton\" to=\"/webcam\">세팅 완료!</Link>\n              </div>\n            </div>\n        </div>\n      </div>\n      <Route path=\"/webcam\" element={\n          <div>\n            <WebcamApp \n              selectedObject={selectedObject} \n              objectCount={parseInt(objectCount, 10)} \n              shootingInterval={parseInt(shootingInterval, 10)}\n              detectionMode={detectionMode}\n            />\n            {/* 돌아가기 버튼 */}\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\n              <Link className=\"LinkButton\" to=\"/\">돌아가기</Link>\n            </div>\n          </div>\n        } />\n      <Loader type=\"pacman\" />\n    </>\n  )\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}