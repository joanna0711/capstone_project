{"ast":null,"code":"var _jsxFileName = \"/Users/song-wonjeong/Downloads/react-python/workspace/src/components/About/index.js\",\n    _s2 = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { useEffect, useState } from 'react';\nimport { faAngular, faCss3, faGitAlt, faHtml5, faJsSquare, faReact, faPython } from '@fortawesome/free-brands-svg-icons';\nimport Loader from 'react-loaders';\nimport AnimatedLetters from '../AnimatedLetters';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const aboutArray = 'ALBUM'.split('');\n  const [letterClass, setLetterClass] = useState('text-animate'); // useEffect(() => {\n  //   const timer = setTimeout(() => {\n  //     setLetterClass('text-animate-hover')\n  //   }, 2000)\n  //   return () => clearTimeout(timer)\n  // }, [])\n\n  function App() {\n    _s();\n\n    const [imagePath, setImagePath] = useState('/Users/song-wonjeong/Desktop/imagefolder/example.jpg'); // 원하는 이미지 경로로 변경\n    // 이미지 경로가 변경되면 useEffect를 사용하여 이미지를 다시 로드\n\n    useEffect(() => {\n      // 이미지를 로드하여 표시할 때 fetch 또는 axios 등을 사용할 수 있습니다.\n      // 아래는 fetch를 사용하는 예제입니다.\n      fetch(imagePath).then(response => {\n        if (response.ok) {\n          return response.blob();\n        } else {\n          throw new Error('이미지를 로드할 수 없습니다.');\n        }\n      }).then(blob => {\n        const imageUrl = URL.createObjectURL(blob); // 이미지를 표시하기 위해 상태를 업데이트\n\n        setImageUrl(imageUrl);\n      }).catch(error => {\n        console.error(error);\n      });\n    }, [imagePath]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"\\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setImagePath('/새로운/이미지/경로.jpg'),\n        children: \"\\uB2E4\\uB978 \\uC774\\uBBF8\\uC9C0 \\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this);\n  } // return (\n  //   <>\n  //     <div className=\"container about-page\">\n  //       <div className=\"text-zone\">\n  //         <h1>\n  //           <AnimatedLetters\n  //             letterClass={letterClass}\n  //             strArray={aboutArray}\n  //             idx={15}\n  //           />\n  //         </h1>\n  //         <p>\n  //           여기는 앨범자리\n  //         </p>\n  //       </div>\n  //     </div>\n  //     <Loader type=\"pacman\" />\n  //   </>\n  // )\n\n\n  _s(App, \"aiUKFuiSVjEsSakyFz3Fr/FmtBw=\");\n};\n\n_s2(About, \"+Mc+psfAnwHtsTNcFiDOzgvyL50=\");\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/song-wonjeong/Downloads/react-python/workspace/src/components/About/index.js"],"names":["useEffect","useState","faAngular","faCss3","faGitAlt","faHtml5","faJsSquare","faReact","faPython","Loader","AnimatedLetters","FontAwesomeIcon","About","aboutArray","split","letterClass","setLetterClass","App","imagePath","setImagePath","fetch","then","response","ok","blob","Error","imageUrl","URL","createObjectURL","setImageUrl","catch","error","console"],"mappings":";;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,QAPF,QAQO,oCARP;AASA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAClB,QAAMC,UAAU,GAAG,QAAQC,KAAR,CAAc,EAAd,CAAnB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,cAAD,CAA9C,CAFkB,CAIlB;AACA;AACA;AACA;AACA;AACA;;AAEF,WAASgB,GAAT,GAAe;AAAA;;AACb,UAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,sDAAD,CAA1C,CADa,CACuF;AAEpG;;AACAD,IAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAoB,MAAAA,KAAK,CAACF,SAAD,CAAL,CACGG,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACL,gBAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACD;AACF,OAPH,EAQGJ,IARH,CAQQG,IAAI,IAAI;AACZ,cAAME,QAAQ,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAjB,CADY,CAEZ;;AACAK,QAAAA,WAAW,CAACH,QAAD,CAAX;AACD,OAZH,EAaGI,KAbH,CAaSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAfH;AAgBD,KAnBQ,EAmBN,CAACb,SAAD,CAnBM,CAAT;AAqBA,wBACE;AAAA,iBAEGQ,QAAQ,iBAAI;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFf,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAMP,YAAY,CAAC,iBAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GA/CmB,CAkDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AApEkB,KAWXF,GAXW;AAqEnB,CArED;;IAAML,K;;KAAAA,K;AAuEN,eAAeA,KAAf","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport { useEffect, useState } from 'react'\r\nimport {\r\n  faAngular,\r\n  faCss3,\r\n  faGitAlt,\r\n  faHtml5,\r\n  faJsSquare,\r\n  faReact,\r\n  faPython,\r\n} from '@fortawesome/free-brands-svg-icons'\r\nimport Loader from 'react-loaders'\r\nimport AnimatedLetters from '../AnimatedLetters'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './index.scss'\r\n\r\nconst About = () => {\r\n  const aboutArray = 'ALBUM'.split('')\r\n  const [letterClass, setLetterClass] = useState('text-animate')\r\n\r\n  // useEffect(() => {\r\n  //   const timer = setTimeout(() => {\r\n  //     setLetterClass('text-animate-hover')\r\n  //   }, 2000)\r\n  //   return () => clearTimeout(timer)\r\n  // }, [])\r\n\r\nfunction App() {\r\n  const [imagePath, setImagePath] = useState('/Users/song-wonjeong/Desktop/imagefolder/example.jpg'); // 원하는 이미지 경로로 변경\r\n\r\n  // 이미지 경로가 변경되면 useEffect를 사용하여 이미지를 다시 로드\r\n  useEffect(() => {\r\n    // 이미지를 로드하여 표시할 때 fetch 또는 axios 등을 사용할 수 있습니다.\r\n    // 아래는 fetch를 사용하는 예제입니다.\r\n    fetch(imagePath)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.blob();\r\n        } else {\r\n          throw new Error('이미지를 로드할 수 없습니다.');\r\n        }\r\n      })\r\n      .then(blob => {\r\n        const imageUrl = URL.createObjectURL(blob);\r\n        // 이미지를 표시하기 위해 상태를 업데이트\r\n        setImageUrl(imageUrl);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, [imagePath]);\r\n\r\n  return (\r\n    <div>\r\n      {/* 이미지를 표시하는 img 요소 */}\r\n      {imageUrl && <img src={imageUrl} alt=\"이미지\" />}\r\n\r\n      {/* 이미지 경로 변경 버튼 */}\r\n      <button onClick={() => setImagePath('/새로운/이미지/경로.jpg')}>\r\n        다른 이미지 로드\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n  // return (\r\n  //   <>\r\n  //     <div className=\"container about-page\">\r\n  //       <div className=\"text-zone\">\r\n  //         <h1>\r\n  //           <AnimatedLetters\r\n  //             letterClass={letterClass}\r\n  //             strArray={aboutArray}\r\n  //             idx={15}\r\n  //           />\r\n  //         </h1>\r\n  //         <p>\r\n  //           여기는 앨범자리\r\n  //         </p>\r\n  //       </div>\r\n  //     </div>\r\n  //     <Loader type=\"pacman\" />\r\n  //   </>\r\n  // )\r\n}\r\n\r\nexport default About\r\n"]},"metadata":{},"sourceType":"module"}