{"ast":null,"code":"import _asyncToGenerator from\"/Users/song-wonjeong/Desktop/react-python/workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/song-wonjeong/Desktop/react-python/workspace/node_modules/@babel/runtime/regenerator/index.js\";import React,{useRef,useEffect,useCallback}from'react';import Webcam from'react-webcam';import{jsx as _jsx}from\"react/jsx-runtime\";var WebcamApp=function WebcamApp(_ref){var selectedObject=_ref.selectedObject,objectCount=_ref.objectCount,shootingInterval=_ref.shootingInterval;var webcamRef=useRef(null);useEffect(function(){var constraints={video:true};navigator.mediaDevices.getUserMedia(constraints).then(function(stream){webcamRef.current.stream=stream;// Webcam 컴포넌트의 스트림에 연결\n}).catch(function(error){console.error('Error on accessing webcam: '+error);});},[]);var saveImageFunction=useCallback(function(){var link=document.createElement('a');link.href=webcamRef.current.getScreenshot();link.download=\"capture_\".concat(Date.now(),\".jpg\");link.click();},[webcamRef]);var sendImageToServer=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var imageSrc,formData,response,data,detectedObjects,objectOccurrences;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(webcamRef.current){_context.next=2;break;}return _context.abrupt(\"return\");case 2:imageSrc=webcamRef.current.getScreenshot();formData=new FormData();formData.append('image',imageSrc);_context.prev=5;_context.next=8;return fetch(\"http://localhost:8000/detect\",{method:\"POST\",body:formData});case 8:response=_context.sent;_context.next=11;return response.json();case 11:data=_context.sent;detectedObjects=data.detected_objects;objectOccurrences=detectedObjects.filter(function(obj){return obj===selectedObject;}).length;if(objectOccurrences>=objectCount){saveImageFunction();}_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](5);console.error(\"Error sending image to server: \",_context.t0);case 20:case\"end\":return _context.stop();}}},_callee,null,[[5,17]]);})),[selectedObject,objectCount,saveImageFunction]);useEffect(function(){var interval=setInterval(function(){sendImageToServer();},shootingInterval*1000);return function(){return clearInterval(interval);};},[shootingInterval,sendImageToServer]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Webcam,{ref:webcamRef,screenshotFormat:\"image/jpeg\",videoConstraints:{deviceId:0},width:500,height:\"auto\"})});};export default WebcamApp;","map":{"version":3,"sources":["/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Skills/WebcamComponent.js"],"names":["React","useRef","useEffect","useCallback","Webcam","WebcamApp","selectedObject","objectCount","shootingInterval","webcamRef","constraints","video","navigator","mediaDevices","getUserMedia","then","stream","current","catch","error","console","saveImageFunction","link","document","createElement","href","getScreenshot","download","Date","now","click","sendImageToServer","imageSrc","formData","FormData","append","fetch","method","body","response","json","data","detectedObjects","detected_objects","objectOccurrences","filter","obj","length","interval","setInterval","clearInterval","deviceId"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nconst WebcamApp = ({ selectedObject, objectCount, shootingInterval }) => {\r\n    const webcamRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const constraints = { video: true };\r\n\r\n        navigator.mediaDevices.getUserMedia(constraints)\r\n        .then((stream) => {\r\n            webcamRef.current.stream = stream; // Webcam 컴포넌트의 스트림에 연결\r\n        }).catch((error) => {\r\n            console.error('Error on accessing webcam: ' + error);\r\n        });\r\n    }, []);\r\n\r\n    const saveImageFunction = useCallback(() => {\r\n        const link = document.createElement('a');\r\n        link.href = webcamRef.current.getScreenshot();\r\n        link.download = `capture_${Date.now()}.jpg`;\r\n        link.click();\r\n    }, [webcamRef]);\r\n\r\n    const sendImageToServer = useCallback(async () => {\r\n        if (!webcamRef.current) {\r\n            return;\r\n        }\r\n\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        const formData = new FormData();\r\n        formData.append('image', imageSrc);\r\n\r\n        try {\r\n            let response = await fetch(\"http://localhost:8000/detect\", {\r\n                method: \"POST\",\r\n                body: formData\r\n            });\r\n            let data = await response.json();\r\n            const detectedObjects = data.detected_objects;\r\n            const objectOccurrences = detectedObjects.filter(obj => obj === selectedObject).length;\r\n            if (objectOccurrences >= objectCount) {\r\n                saveImageFunction();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error sending image to server: \", error);\r\n        }\r\n    }, [selectedObject, objectCount, saveImageFunction]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            sendImageToServer();\r\n        }, shootingInterval * 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [shootingInterval, sendImageToServer]);\r\n\r\n    return (\r\n        <div>\r\n            <Webcam\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                videoConstraints={{ deviceId: 0 }}\r\n                width={500}\r\n                height=\"auto\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WebcamApp;\r\n"]},"metadata":{},"sourceType":"module"}