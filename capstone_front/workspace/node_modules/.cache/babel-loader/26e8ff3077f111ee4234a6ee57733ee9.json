{"ast":null,"code":"var _jsxFileName = \"/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Loader from 'react-loaders';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useRef } from 'react';\nimport emailjs from '@emailjs/browser';\nimport AnimatedLetters from '../AnimatedLetters';\nimport './index.scss';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [letterClass, setLetterClass] = useState('text-animate');\n  const form = useRef();\n  const contactArray = 'Select Objection'.split(''); // coco 데이터셋에서 사용되는 객체 목록\n\n  const cocoObjects = [\"person\", \"bicycle\", \"car\", \"motorcycle\", \"airplane\", \"bus\", \"train\", \"truck\", \"boat\", \"traffic light\", \"fire hydrant\", \"stop sign\", \"parking meter\", \"bench\", \"bird\", \"cat\", \"dog\", \"horse\", \"sheep\", \"cow\", \"elephant\", \"bear\", \"zebra\", \"giraffe\", \"backpack\", \"umbrella\", \"handbag\", \"tie\", \"suitcase\", \"frisbee\", \"skis\", \"snowboard\", \"sports ball\", \"kite\", \"baseball bat\", \"baseball glove\", \"skateboard\", \"surfboard\", \"tennis racket\", \"bottle\", \"wine glass\", \"cup\", \"fork\", \"knife\", \"spoon\", \"bowl\", \"banana\", \"apple\", \"sandwich\", \"orange\", \"broccoli\", \"carrot\", \"hot dog\", \"pizza\", \"donut\", \"cake\", \"chair\", \"couch\", \"potted plant\", \"bed\", \"dining table\", \"toilet\", \"tv\", \"laptop\", \"mouse\", \"remote\", \"keyboard\", \"cell phone\", \"microwave\", \"oven\", \"toaster\", \"sink\", \"refrigerator\", \"book\", \"clock\", \"vase\", \"scissors\", \"teddy bear\", \"hair drier\", \"toothbrush\"]; // const currencies = [\n\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover');\n    }, 3000);\n  }, []);\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm(process.env.REACT_APP_EMIAL_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, form.current, process.env.REACT_APP_PUBLIC_KEY).then(() => {\n      // alert('성공적으로 메세지를 보냈습니다.')\n      toast.success('Message successfully sent!', {\n        position: 'bottom-center',\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n      const timeout = setTimeout(() => {\n        window.location.reload(false);\n      }, 3900);\n      return () => clearTimeout(timeout);\n    }, () => {\n      // alert('다시 시도해주세요')\n      toast.error('Failed to send the message, please try again', {\n        position: 'bottom-center',\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container contact-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Contact, \"Nh7PmDT9XxshDzJA92J6n98eyT0=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Contact/index.js"],"names":["useEffect","useState","Loader","MapContainer","TileLayer","Marker","Popup","useRef","emailjs","AnimatedLetters","ToastContainer","toast","Contact","letterClass","setLetterClass","form","contactArray","split","cocoObjects","setTimeout","sendEmail","e","preventDefault","sendForm","process","env","REACT_APP_EMIAL_SERVICE_ID","REACT_APP_TEMPLATE_ID","current","REACT_APP_PUBLIC_KEY","then","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","timeout","window","location","reload","clearTimeout","error"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Loader from 'react-loaders'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { useRef } from 'react'\nimport emailjs from '@emailjs/browser'\nimport AnimatedLetters from '../AnimatedLetters'\nimport './index.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nconst Contact = () => {\n  const [letterClass, setLetterClass] = useState('text-animate')\n  const form = useRef()\n  const contactArray = 'Select Objection'.split('')\n\n// coco 데이터셋에서 사용되는 객체 목록\nconst cocoObjects = [\n  \"person\", \"bicycle\", \"car\", \"motorcycle\", \"airplane\", \"bus\", \"train\", \"truck\", \"boat\", \"traffic light\",\n  \"fire hydrant\", \"stop sign\", \"parking meter\", \"bench\", \"bird\", \"cat\", \"dog\", \"horse\", \"sheep\", \"cow\",\n  \"elephant\", \"bear\", \"zebra\", \"giraffe\", \"backpack\", \"umbrella\", \"handbag\", \"tie\", \"suitcase\", \"frisbee\",\n  \"skis\", \"snowboard\", \"sports ball\", \"kite\", \"baseball bat\", \"baseball glove\", \"skateboard\", \"surfboard\", \n  \"tennis racket\", \"bottle\", \"wine glass\", \"cup\", \"fork\", \"knife\", \"spoon\", \"bowl\", \"banana\", \"apple\",\n  \"sandwich\", \"orange\", \"broccoli\", \"carrot\", \"hot dog\", \"pizza\", \"donut\", \"cake\", \"chair\", \"couch\",\n  \"potted plant\", \"bed\", \"dining table\", \"toilet\", \"tv\", \"laptop\", \"mouse\", \"remote\", \"keyboard\", \n  \"cell phone\", \"microwave\", \"oven\", \"toaster\", \"sink\", \"refrigerator\", \"book\", \"clock\", \"vase\", \n  \"scissors\", \"teddy bear\", \"hair drier\", \"toothbrush\"\n];\n// const currencies = [\n\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover')\n    }, 3000)\n  }, [])\n\n  const sendEmail = (e) => {\n    e.preventDefault()\n\n    emailjs\n      .sendForm(\n        process.env.REACT_APP_EMIAL_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        form.current,\n        process.env.REACT_APP_PUBLIC_KEY\n      )\n      .then(\n        () => {\n          // alert('성공적으로 메세지를 보냈습니다.')\n          toast.success('Message successfully sent!', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n          const timeout = setTimeout(() => {\n            window.location.reload(false)\n          }, 3900)\n\n          return () => clearTimeout(timeout)\n        },\n        () => {\n          // alert('다시 시도해주세요')\n          toast.error('Failed to send the message, please try again', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n        }\n      )\n  }\n\n  return (\n    <>\n      <div className=\"container contact-page\">\n        <div className=\"text-zone\">\n        \n          \n\n\n        </div>\n      </div>\n      <Loader type=\"pacman\" />\n    </>\n  )\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}