{"ast":null,"code":"import _slicedToArray from\"/Users/song-wonjeong/Desktop/react-python/workspace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import Loader from'react-loaders';import{MapContainer,TileLayer,Marker,Popup}from'react-leaflet';import{useRef}from'react';import emailjs from'@emailjs/browser';import AnimatedLetters from'../AnimatedLetters';import'./index.scss';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';var Contact=function Contact(){var _useState=useState('text-animate'),_useState2=_slicedToArray(_useState,2),letterClass=_useState2[0],setLetterClass=_useState2[1];var form=useRef();var contactArray='Select Objection'.split('');// const currencies = [\nuseEffect(function(){return setTimeout(function(){setLetterClass('text-animate-hover');},3000);},[]);var sendEmail=function sendEmail(e){e.preventDefault();emailjs.sendForm(process.env.REACT_APP_EMIAL_SERVICE_ID,process.env.REACT_APP_TEMPLATE_ID,form.current,process.env.REACT_APP_PUBLIC_KEY).then(function(){// alert('성공적으로 메세지를 보냈습니다.')\ntoast.success('Message successfully sent!',{position:'bottom-center',autoClose:3500,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});var timeout=setTimeout(function(){window.location.reload(false);},3900);return function(){return clearTimeout(timeout);};},function(){// alert('다시 시도해주세요')\ntoast.error('Failed to send the message, please try again',{position:'bottom-center',autoClose:3500,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});});};};export default Contact;","map":{"version":3,"sources":["/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Contact/index.js"],"names":["useEffect","useState","Loader","MapContainer","TileLayer","Marker","Popup","useRef","emailjs","AnimatedLetters","ToastContainer","toast","Contact","letterClass","setLetterClass","form","contactArray","split","setTimeout","sendEmail","e","preventDefault","sendForm","process","env","REACT_APP_EMIAL_SERVICE_ID","REACT_APP_TEMPLATE_ID","current","REACT_APP_PUBLIC_KEY","then","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","timeout","window","location","reload","clearTimeout","error"],"mappings":"yIAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,OAASC,YAAT,CAAuBC,SAAvB,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,eAAvD,CACA,OAASC,MAAT,KAAuB,OAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAO,cAAP,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAO,uCAAP,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,cAAsCX,QAAQ,CAAC,cAAD,CAA9C,wCAAOY,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,IAAI,CAAGR,MAAM,EAAnB,CACA,GAAMS,CAAAA,YAAY,CAAG,mBAAmBC,KAAnB,CAAyB,EAAzB,CAArB,CAGF;AAEEjB,SAAS,CAAC,UAAM,CACd,MAAOkB,CAAAA,UAAU,CAAC,UAAM,CACtBJ,cAAc,CAAC,oBAAD,CAAd,CACD,CAFgB,CAEd,IAFc,CAAjB,CAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,CAAO,CACvBA,CAAC,CAACC,cAAF,GAEAb,OAAO,CACJc,QADH,CAEIC,OAAO,CAACC,GAAR,CAAYC,0BAFhB,CAGIF,OAAO,CAACC,GAAR,CAAYE,qBAHhB,CAIIX,IAAI,CAACY,OAJT,CAKIJ,OAAO,CAACC,GAAR,CAAYI,oBALhB,EAOGC,IAPH,CAQI,UAAM,CACJ;AACAlB,KAAK,CAACmB,OAAN,CAAc,4BAAd,CAA4C,CAC1CC,QAAQ,CAAE,eADgC,CAE1CC,SAAS,CAAE,IAF+B,CAG1CC,eAAe,CAAE,KAHyB,CAI1CC,YAAY,CAAE,IAJ4B,CAK1CC,YAAY,CAAE,IAL4B,CAM1CC,SAAS,CAAE,IAN+B,CAO1CC,QAAQ,CAAEC,SAPgC,CAQ1CC,KAAK,CAAE,MARmC,CAA5C,EAUA,GAAMC,CAAAA,OAAO,CAAGtB,UAAU,CAAC,UAAM,CAC/BuB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACD,CAFyB,CAEvB,IAFuB,CAA1B,CAIA,MAAO,kBAAMC,CAAAA,YAAY,CAACJ,OAAD,CAAlB,EAAP,CACD,CAzBL,CA0BI,UAAM,CACJ;AACA7B,KAAK,CAACkC,KAAN,CAAY,8CAAZ,CAA4D,CAC1Dd,QAAQ,CAAE,eADgD,CAE1DC,SAAS,CAAE,IAF+C,CAG1DC,eAAe,CAAE,KAHyC,CAI1DC,YAAY,CAAE,IAJ4C,CAK1DC,YAAY,CAAE,IAL4C,CAM1DC,SAAS,CAAE,IAN+C,CAO1DC,QAAQ,CAAEC,SAPgD,CAQ1DC,KAAK,CAAE,MARmD,CAA5D,EAUD,CAtCL,EAwCD,CA3CD,CA8CD,CA5DD,CA8DA,cAAe3B,CAAAA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Loader from 'react-loaders'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { useRef } from 'react'\nimport emailjs from '@emailjs/browser'\nimport AnimatedLetters from '../AnimatedLetters'\nimport './index.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nconst Contact = () => {\n  const [letterClass, setLetterClass] = useState('text-animate')\n  const form = useRef()\n  const contactArray = 'Select Objection'.split('')\n\n  \n// const currencies = [\n\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover')\n    }, 3000)\n  }, [])\n\n  const sendEmail = (e) => {\n    e.preventDefault()\n\n    emailjs\n      .sendForm(\n        process.env.REACT_APP_EMIAL_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        form.current,\n        process.env.REACT_APP_PUBLIC_KEY\n      )\n      .then(\n        () => {\n          // alert('성공적으로 메세지를 보냈습니다.')\n          toast.success('Message successfully sent!', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n          const timeout = setTimeout(() => {\n            window.location.reload(false)\n          }, 3900)\n\n          return () => clearTimeout(timeout)\n        },\n        () => {\n          // alert('다시 시도해주세요')\n          toast.error('Failed to send the message, please try again', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n        }\n      )\n  }\n\n\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}