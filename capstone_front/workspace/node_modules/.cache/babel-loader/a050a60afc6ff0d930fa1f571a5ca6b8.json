{"ast":null,"code":"var _jsxFileName = \"/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Loader from 'react-loaders';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useRef } from 'react';\nimport emailjs from '@emailjs/browser';\nimport AnimatedLetters from '../AnimatedLetters';\nimport './index.scss';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [letterClass, setLetterClass] = useState('text-animate');\n  const form = useRef();\n  const contactArray = ''.split('');\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover');\n    }, 3000);\n  }, []);\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm(process.env.REACT_APP_EMIAL_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, form.current, process.env.REACT_APP_PUBLIC_KEY).then(() => {\n      // alert('성공적으로 메세지를 보냈습니다.')\n      toast.success('Message successfully sent!', {\n        position: 'bottom-center',\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n      const timeout = setTimeout(() => {\n        window.location.reload(false);\n      }, 3900);\n      return () => clearTimeout(timeout);\n    }, () => {\n      // alert('다시 시도해주세요')\n      toast.error('Failed to send the message, please try again', {\n        position: 'bottom-center',\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container contact-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-zone\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n            letterClass: letterClass,\n            strArray: contactArray,\n            idx: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Contact, \"Nh7PmDT9XxshDzJA92J6n98eyT0=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Contact/index.js"],"names":["useEffect","useState","Loader","MapContainer","TileLayer","Marker","Popup","useRef","emailjs","AnimatedLetters","ToastContainer","toast","Contact","letterClass","setLetterClass","form","contactArray","split","setTimeout","sendEmail","e","preventDefault","sendForm","process","env","REACT_APP_EMIAL_SERVICE_ID","REACT_APP_TEMPLATE_ID","current","REACT_APP_PUBLIC_KEY","then","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","timeout","window","location","reload","clearTimeout","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAO,cAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,cAAD,CAA9C;AACA,QAAMc,IAAI,GAAGR,MAAM,EAAnB;AACA,QAAMS,YAAY,GAAG,GAAGC,KAAH,CAAS,EAAT,CAArB;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOkB,UAAU,CAAC,MAAM;AACtBJ,MAAAA,cAAc,CAAC,oBAAD,CAAd;AACD,KAFgB,EAEd,IAFc,CAAjB;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMK,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAb,IAAAA,OAAO,CACJc,QADH,CAEIC,OAAO,CAACC,GAAR,CAAYC,0BAFhB,EAGIF,OAAO,CAACC,GAAR,CAAYE,qBAHhB,EAIIX,IAAI,CAACY,OAJT,EAKIJ,OAAO,CAACC,GAAR,CAAYI,oBALhB,EAOGC,IAPH,CAQI,MAAM;AACJ;AACAlB,MAAAA,KAAK,CAACmB,OAAN,CAAc,4BAAd,EAA4C;AAC1CC,QAAAA,QAAQ,EAAE,eADgC;AAE1CC,QAAAA,SAAS,EAAE,IAF+B;AAG1CC,QAAAA,eAAe,EAAE,KAHyB;AAI1CC,QAAAA,YAAY,EAAE,IAJ4B;AAK1CC,QAAAA,YAAY,EAAE,IAL4B;AAM1CC,QAAAA,SAAS,EAAE,IAN+B;AAO1CC,QAAAA,QAAQ,EAAEC,SAPgC;AAQ1CC,QAAAA,KAAK,EAAE;AARmC,OAA5C;AAUA,YAAMC,OAAO,GAAGtB,UAAU,CAAC,MAAM;AAC/BuB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,OAFyB,EAEvB,IAFuB,CAA1B;AAIA,aAAO,MAAMC,YAAY,CAACJ,OAAD,CAAzB;AACD,KAzBL,EA0BI,MAAM;AACJ;AACA7B,MAAAA,KAAK,CAACkC,KAAN,CAAY,8CAAZ,EAA4D;AAC1Dd,QAAAA,QAAQ,EAAE,eADgD;AAE1DC,QAAAA,SAAS,EAAE,IAF+C;AAG1DC,QAAAA,eAAe,EAAE,KAHyC;AAI1DC,QAAAA,YAAY,EAAE,IAJ4C;AAK1DC,QAAAA,YAAY,EAAE,IAL4C;AAM1DC,QAAAA,SAAS,EAAE,IAN+C;AAO1DC,QAAAA,QAAQ,EAAEC,SAPgD;AAQ1DC,QAAAA,KAAK,EAAE;AARmD,OAA5D;AAUD,KAtCL;AAwCD,GA3CD;;AA6CA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,WAAW,EAAE1B,WADf;AAEE,YAAA,QAAQ,EAAEG,YAFZ;AAGE,YAAA,GAAG,EAAE;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAiBD,CA3ED;;GAAMJ,O;;KAAAA,O;AA6EN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Loader from 'react-loaders'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { useRef } from 'react'\nimport emailjs from '@emailjs/browser'\nimport AnimatedLetters from '../AnimatedLetters'\nimport './index.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nconst Contact = () => {\n  const [letterClass, setLetterClass] = useState('text-animate')\n  const form = useRef()\n  const contactArray = ''.split('')\n\n\n\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover')\n    }, 3000)\n  }, [])\n\n  const sendEmail = (e) => {\n    e.preventDefault()\n\n    emailjs\n      .sendForm(\n        process.env.REACT_APP_EMIAL_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        form.current,\n        process.env.REACT_APP_PUBLIC_KEY\n      )\n      .then(\n        () => {\n          // alert('성공적으로 메세지를 보냈습니다.')\n          toast.success('Message successfully sent!', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n          const timeout = setTimeout(() => {\n            window.location.reload(false)\n          }, 3900)\n\n          return () => clearTimeout(timeout)\n        },\n        () => {\n          // alert('다시 시도해주세요')\n          toast.error('Failed to send the message, please try again', {\n            position: 'bottom-center',\n            autoClose: 3500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          })\n        }\n      )\n  }\n\n  return (\n    <>\n      <div className=\"container contact-page\">\n        <div className=\"text-zone\">\n          <h1>\n            <AnimatedLetters\n              letterClass={letterClass}\n              strArray={contactArray}\n              idx={15}\n            />\n          </h1>\n\n        </div>\n      </div>\n      <Loader type=\"pacman\" />\n    </>\n  )\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}