{"ast":null,"code":"var _jsxFileName = \"/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Skills/WebcamComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WebcamApp(_ref) {\n  _s();\n\n  let {\n    selectedObject,\n    objectCount,\n    shootingInterval\n  } = _ref;\n  const webcamRef = useRef(null);\n  const saveImageFunction = useCallback(() => {\n    const link = document.createElement('a');\n    link.href = webcamRef.current.getScreenshot();\n    link.download = `capture_${Date.now()}.jpg`;\n    link.click();\n  }, [webcamRef]);\n  const sendImageToServer = useCallback(async () => {\n    if (!webcamRef.current) {\n      return;\n    }\n\n    const imageSrc = webcamRef.current.getScreenshot();\n    const formData = new FormData();\n    formData.append('image', imageSrc);\n\n    try {\n      let response = await fetch(\"http://localhost:8000/detect\", {\n        method: \"POST\",\n        body: formData\n      });\n      let data = await response.json();\n      const detectedObjects = data.detected_objects;\n      const objectOccurrences = detectedObjects.filter(obj => obj === selectedObject).length;\n\n      if (objectOccurrences >= objectCount) {\n        saveImageFunction();\n      }\n    } catch (error) {\n      console.error(\"Error sending image to server: \", error);\n    }\n  }, [selectedObject, objectCount, saveImageFunction]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      sendImageToServer();\n    }, shootingInterval * 1000);\n    return () => clearInterval(interval);\n  }, [shootingInterval, sendImageToServer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        deviceId: 0\n      },\n      width: 1920,\n      height: 1080\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WebcamApp, \"GbN4eSHjVxv3d8DGv2wrOzo6C7I=\");\n\n_c = WebcamApp;\nexport default WebcamApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebcamApp\");","map":{"version":3,"sources":["/Users/song-wonjeong/Desktop/react-python/workspace/src/components/Skills/WebcamComponent.js"],"names":["React","useRef","useEffect","useCallback","Webcam","WebcamApp","selectedObject","objectCount","shootingInterval","webcamRef","saveImageFunction","link","document","createElement","href","current","getScreenshot","download","Date","now","click","sendImageToServer","imageSrc","formData","FormData","append","response","fetch","method","body","data","json","detectedObjects","detected_objects","objectOccurrences","filter","obj","length","error","console","interval","setInterval","clearInterval","deviceId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,SAASC,SAAT,OAAsE;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,GAAmD;AAClE,QAAMC,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAMS,iBAAiB,GAAGP,WAAW,CAAC,MAAM;AACxC,UAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAYL,SAAS,CAACM,OAAV,CAAkBC,aAAlB,EAAZ;AACAL,IAAAA,IAAI,CAACM,QAAL,GAAiB,WAAUC,IAAI,CAACC,GAAL,EAAW,MAAtC;AACAR,IAAAA,IAAI,CAACS,KAAL;AACH,GALoC,EAKlC,CAACX,SAAD,CALkC,CAArC;AAOA,QAAMY,iBAAiB,GAAGlB,WAAW,CAAC,YAAY;AAC9C,QAAI,CAACM,SAAS,CAACM,OAAf,EAAwB;AACpB;AACH;;AAED,UAAMO,QAAQ,GAAGb,SAAS,CAACM,OAAV,CAAkBC,aAAlB,EAAjB;AACA,UAAMO,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAzB;;AAEA,QAAI;AACA,UAAII,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,IAAI,EAAEN;AAFiD,OAAjC,CAA1B;AAIA,UAAIO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;AACA,YAAMC,eAAe,GAAGF,IAAI,CAACG,gBAA7B;AACA,YAAMC,iBAAiB,GAAGF,eAAe,CAACG,MAAhB,CAAuBC,GAAG,IAAIA,GAAG,KAAK9B,cAAtC,EAAsD+B,MAAhF;;AACA,UAAIH,iBAAiB,IAAI3B,WAAzB,EAAsC;AAClCG,QAAAA,iBAAiB;AACpB;AACJ,KAXD,CAWE,OAAO4B,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,iCAAd,EAAiDA,KAAjD;AACH;AACJ,GAvBoC,EAuBlC,CAAChC,cAAD,EAAiBC,WAAjB,EAA8BG,iBAA9B,CAvBkC,CAArC;AAyBAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BpB,MAAAA,iBAAiB;AACpB,KAF2B,EAEzBb,gBAAgB,GAAG,IAFM,CAA5B;AAIA,WAAO,MAAMkC,aAAa,CAACF,QAAD,CAA1B;AACH,GANQ,EAMN,CAAChC,gBAAD,EAAmBa,iBAAnB,CANM,CAAT;AAQA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,GAAG,EAAEZ,SADT;AAEI,MAAA,gBAAgB,EAAC,YAFrB;AAGI,MAAA,gBAAgB,EAAE;AAAEkC,QAAAA,QAAQ,EAAE;AAAZ,OAHtB;AAII,MAAA,KAAK,EAAE,IAJX;AAKI,MAAA,MAAM,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAtDQtC,S;;KAAAA,S;AAwDT,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nfunction WebcamApp({ selectedObject, objectCount, shootingInterval }) {\r\n    const webcamRef = useRef(null);\r\n\r\n    const saveImageFunction = useCallback(() => {\r\n        const link = document.createElement('a');\r\n        link.href = webcamRef.current.getScreenshot();\r\n        link.download = `capture_${Date.now()}.jpg`;\r\n        link.click();\r\n    }, [webcamRef]);\r\n\r\n    const sendImageToServer = useCallback(async () => {\r\n        if (!webcamRef.current) {\r\n            return;\r\n        }\r\n\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        const formData = new FormData();\r\n        formData.append('image', imageSrc);\r\n\r\n        try {\r\n            let response = await fetch(\"http://localhost:8000/detect\", {\r\n                method: \"POST\",\r\n                body: formData\r\n            });\r\n            let data = await response.json();\r\n            const detectedObjects = data.detected_objects;\r\n            const objectOccurrences = detectedObjects.filter(obj => obj === selectedObject).length;\r\n            if (objectOccurrences >= objectCount) {\r\n                saveImageFunction();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error sending image to server: \", error);\r\n        }\r\n    }, [selectedObject, objectCount, saveImageFunction]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            sendImageToServer();\r\n        }, shootingInterval * 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [shootingInterval, sendImageToServer]);\r\n\r\n    return (\r\n        <div>\r\n            <Webcam \r\n                ref={webcamRef} \r\n                screenshotFormat=\"image/jpeg\"\r\n                videoConstraints={{ deviceId: 0 }}\r\n                width={1920}\r\n                height={1080}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WebcamApp;\r\n"]},"metadata":{},"sourceType":"module"}